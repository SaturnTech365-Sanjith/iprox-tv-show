// <auto-generated />
using System;
using Iprox.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iprox.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreTvShow", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("TvShowId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "TvShowId");

                    b.HasIndex("TvShowId");

                    b.ToTable("TvShowGenres", (string)null);
                });

            modelBuilder.Entity("Iprox.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(208),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(219),
                            Name = "ScienceFiction"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(276),
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(278),
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(279),
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(280),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(281),
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(282),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2025, 2, 1, 9, 34, 3, 794, DateTimeKind.Utc).AddTicks(282),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Iprox.Domain.Entities.TvShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("Premiered")
                        .HasColumnType("date");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvMazeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TvMazeId")
                        .IsUnique()
                        .HasFilter("[TvMazeId] IS NOT NULL");

                    b.ToTable("TvShow");
                });

            modelBuilder.Entity("GenreTvShow", b =>
                {
                    b.HasOne("Iprox.Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iprox.Domain.Entities.TvShow", null)
                        .WithMany()
                        .HasForeignKey("TvShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
